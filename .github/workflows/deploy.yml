name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # gradlew에 권한부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      #bootJar를 통해 build
      - name: gradlew bootJar
        run: ./gradlew bootJar

      #Docker hub에 이미지 푸시를 위한 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # DocckerFile을 가지고, image 생성 후, Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/care-bridge:latest

      # Docker-Compose를 EC2로 복사
      - name : Copy docker-compose.yml to EC2
        uses : appleboy/scp-action@v0.1.4
        with :
          host : ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key : ${{ secrets.EC2_KEY }}
          port : 22
          source: "docker-compose.yml"
          target: "/home/ec2-user"


      # Deploy and docker-compose up and down

      - name: SSH Commands
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script_stop: true
          script: |
            cd /home/ec2-user

            # 기존 애플리케이션 컨테이너만 삭제 (MySQL, Redis 유지)
            sudo docker-compose stop app
            sudo docker-compose rm -f app

            # 최신 이미지 Pull
            sudo docker rmi herokim97/care-bridge:latest
            sudo docker pull herokim97/care-bridge:latest
        

            # 애플리케이션만 다시 실행 (MySQL, Redis 유지)
            sudo docker-compose up -d

#            # 기존 컨테이너 중지 및 제거
#             CONTAINER_ID=$(sudo docker ps -q --filter "publish=8080-8080")
#             if [ ! -z "$CONTAINER_ID" ]; then
#               sudo docker stop $CONTAINER_ID
#               sudo docker rm $CONTAINER_ID
#             fi
            
            # 새 이미지 Pull 및 실행 ---
#             sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_TAG_NAME }}:latest
#             sudo docker run -d -p 8080:8080 \
#             -e ACCESS_KEY=${{secrets.ACCESS_KEY}} \
#             -e SECRET_KEY=${{secrets.SECRET_KEY}} \
#             -e DB_URL=${{secrets.DB_URL}} \
#             -e DATABASE_USERNAME=${{secrets.DB_USERNAME}} \
#             -e DATABASE_PASSWORD=${{secrets.DB_PASSWORD}} \
#             -e BUCKET_NAME=${{secrets.BUCKET_NAME}} \
#             -e CLIENT_ID=${{secrets.CLIENT_ID}} \
#             -e CLIENT_SECRET=${{secrets.CLIENT_SECRET}} \
#             -e REDIRECT_URI=${{secrets.REDIRECT_URI}} \
#             -e OPENAI_API_KEY=${{secrets.OPENAI_API_KEY}} \
#             -e KAKAO_PAY_SECRET_KEY=${{secrets.KAKAO_PAY_SECRET_KEY}} \
#             ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_TAG_NAME }}:latest